@model IEnumerable<Walnut.Entities.CompanyAPIcommandMAP>
@using Walnut.Extensions
@using Walnut.Models.CustomHTMLHelpers;
@{
    ViewBag.Title = "Index";
}

<h2>Companies API's Commands MAPS</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table table-condensed">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CompanyAPICommandId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.urlParameterName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.urlParameterValue_EntityName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.urlParameterValue_EntityRecordId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.urlParameterValue_EntityPropertyName)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.CompanyAPICommandId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.urlParameterName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.urlParameterValue_EntityName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.urlParameterValue_EntityRecordId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.urlParameterValue_EntityPropertyName)
        </td>
        <td>
            @Html.CRUD_ActionLink("Edit", item.GetType().Name, "Edit", item.Id, true) &nbsp;
            @Html.CRUD_ActionLink("Details", item.GetType().Name, "Details", item.Id, true) &nbsp;
            @Html.CRUD_ActionLink("Delete", item.GetType().Name, "Delete", item.Id, true)
        </td>
    </tr>
}

</table>
@Scripts.Render("~/bundles/WalnutUIList")